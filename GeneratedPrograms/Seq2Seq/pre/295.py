n, a = map(int, input().split())
c = 0
a = c = 0
for i in range(n):
	c =(c * a)// 2
c = c *(c *(c * c))
c = c *(c *(c * c))
c = c *(c *(c * c))
c = c *(c *(c // 2))
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c * c)
c = c *(c *